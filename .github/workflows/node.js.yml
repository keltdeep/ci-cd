# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 16.10 ]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build
    - run: npm run lint
    - run: npm run test
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.CICD_DOCKERHUB_USERNAME }}
        password: ${{ secrets.CICD_DOCKERHUB_TOKEN }}
    - name: Create container
      uses: docker/build-push-action@v3.2.0
      with:
        load: true
        tags: keltdeep2/cicd
        context: .
        file: ./Dockerfile
    - run: docker push keltdeep2/cicd
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy using ssh
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.CICD_HOST }}
          username: ${{ secrets.CICD_USERNAME }}
          password: ${{ secrets.CICD_PASSWORD }}
          port: 22
          script: |
            cd /home/cicd/ci-cd
            docker-compose down
            git pull origin main
            rm -R node_modules/
            rm -R dist/
            npm cache clean --force
            npm ci
            npm run build
            docker-compose build
            docker-compose up -d
